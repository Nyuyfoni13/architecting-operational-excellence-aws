---
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  AWS CloudFormation Template that creates a launch template and an Auto
  Scaling Group. Requires network stack name as a parameter.

Parameters:
  VPCStackName:
    Description: Name of an active CloudFormation stack that contains the VPC
      resources that will be used in this stack.
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: "^[a-zA-Z][-a-zA-Z0-9]*$"

  ALBStackName:
    Description: Name of an active CloudFormation stack that contains the ALB
      resources that will be used in this stack.
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: "^[a-zA-Z][-a-zA-Z0-9]*$"

  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.

  GroupSize:
    Default: '2'
    Description: The initial nuber of Webserver instances
    Type: Number
    MinValue: '1'
    MaxValue: '6'
    ConstraintDescription: Must be between 1 and 6 EC2 instances.

  InstanceType:
    Description: Webserver EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    ConstraintDescription: must be a valid T2 EC2 instance type.
  
  SSHLocation:
    Description: " The IP address range that can be used to SSH to the EC2 instances"
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

Mappings:
  AWSRegionArch2AMI:
    us-east-1:
      HVM64: ami-97785bed
    us-west-2:
      HVM64: ami-f2d3638a
    us-west-1:
      HVM64: ami-824c4ee2
    eu-west-1:
      HVM64: ami-d834aba1
    eu-west-2:
      HVM64: ami-403e2524
    eu-west-3:
      HVM64: ami-8ee056f3
    eu-central-1:
      HVM64: ami-5652ce39
    ap-northeast-1:
      HVM64: ami-ceafcba8
    ap-northeast-2:
      HVM64: ami-863090e8
    ap-northeast-3:
      HVM64: ami-83444afe
    ap-southeast-1:
      HVM64: ami-68097514
    ap-southeast-2:
      HVM64: ami-942dd1f6
    ap-south-1:
      HVM64: ami-531a4c3c
    us-east-2:
      HVM64: ami-f63b1193
    ca-central-1:
      HVM64: ami-a954d1cd
    sa-east-1:
      HVM64: ami-84175ae8
    cn-north-1:
      HVM64: ami-cb19c4a6
    cn-northwest-1:
      HVM64: ami-3e60745c

Resources:
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow inbound HTTP from the load balancer and inbound SSH from SSHLocation"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        SourceSecurityGroupId:
          - Fn::ImportValue:
              !Sub "${ALBStackName}-SecurityGroup"
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp:
          Ref: SSHLocation
      VpcId:
        Fn::ImportValue:
          Fn::Sub: "${VPCStackName}-VPCID"

  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: InstanceRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: InstanceProfile
      Path: "/"
      Roles:
      - Ref: InstanceRole

  WebserverLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId:
          Fn::FindInMap:
            - AWSRegionArch2AMI
            - !Ref AWS::Region
            - HVM64
        IamInstanceProfile:
          Arn:
            Fn::GetAtt:
            - InstanceProfile
            - Arn
        InstanceType:
          Ref: InstanceType
        SecurityGroupIds:
        - Ref: InstanceSecurityGroup
        KeyName:
          Ref: KeyName
        UserData:
          Fn::Base64:
            Fn::Join:
            - ''
            - - "#!/bin/bash\n"
              - "sudo yum -y update"
              - "sudo yum -y install aws-cfn-bootstrap"
              - "/opt/aws/bin/cfn-signal -e 0 --stack "
              - Ref: AWS::StackName
              - " --resource AutoScalingGroup"

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue:
          Fn::Sub: "${VPCStackName}-PublicSubnet1"
      - Fn::ImportValue:
          Fn::Sub: "${VPCStackName}-PublicSubnet2"
      LaunchTemplate:
        LaunchTemplateId:
          Ref: WebserverLaunchTemplate
        Version: '1'
      MinSize: '1'
      MaxSize: '5'
      DesiredCapacity:
        Ref: GroupSize
      TargetGroupARNs:
      - Fn::ImportValue:
          !Sub "${ALBStackName}-TargetGroup"
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M
        Count:
          Ref: GroupSize
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: '1'
        MaxBatchSize: '1'
        PauseTime: PT15M
        WaitOnResourceSignals: 'true'
